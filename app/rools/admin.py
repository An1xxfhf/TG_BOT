from aiogram import Router,F
from aiogram.types import Message
from aiogram.filters import Filter,Command
from aiogram.fsm.context import FSMContext
from app.states import State
from aiogram.enums import ChatAction
import asyncio
from app.DB.requests import get_users
from app.DB.requests import set_user
from app.keyboards import main
admin = Router()


class Admin(Filter):
    async def __call__(self, message: Message):
        return message.from_user.id in [1986006290]

@admin.message(Admin(),Command('start'))
async def start_admin(message:Message):
    await set_user(message.from_user.id)
    await message.bot.send_chat_action(
        chat_id=message.from_user.id,
        action=ChatAction.TYPING
    )
    await asyncio.sleep(1)
    await message.answer('–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é –∞–¥–º–∏–Ωüëã\n'
                   '–ß—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ –≤–≤–µ–¥–∏ <b>/help</b>',parse_mode='HTML',reply_markup=main)

@admin.message(Admin(),Command('help'))
async def admin_help(message:Message):
    await message.bot.send_chat_action(
        chat_id=message.from_user.id,
        action=ChatAction.TYPING
    )
    await asyncio.sleep(1)
    await message.answer('–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥‚¨áÔ∏è\n'
                   '<b>/newsletter</b> - –ø–æ–∑–≤–æ–ª—è–µ—Ç –¥–µ–ª–∞—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É\n'
                   '<b>/database</b> - –ø–æ–∑–≤–æ–ª—è–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å —Å –±–∞–∑–∞–º–∏ –¥–∞–Ω–Ω—ã—Ö',parse_mode='HTML')




@admin.message(Admin(), Command('newsletter'))
async def newsletter(message: Message, state: FSMContext):
    await message.bot.send_chat_action(
        chat_id=message.from_user.id,
        action=ChatAction.TYPING
    )
    await asyncio.sleep(1)
    await message.answer('üì®–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏')
    await state.set_state(State.message)


@admin.message(State.message)
async def newslet_mes(message: Message, state: FSMContext):
    await state.clear()
    users = await get_users()
    success = 0
    failed = 0

    await message.answer('–†–∞—Å—Å—ã–ª–∫–∞ –Ω–∞—á–∞—Ç–∞...')

    for user in users:
        try:
            await message.send_copy(chat_id=user.tg_id)
            success += 1
            await asyncio.sleep(0.1)
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user.tg_id}: {e}")
            failed += 1


    await message.answer(
        f'–†–∞—Å—Å—ã–ª–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞\n'
        f'–£—Å–ø–µ—à–Ω–æ: {success}\n'
        f'–ù–µ —É–¥–∞–ª–æ—Å—å: {failed}'
    )